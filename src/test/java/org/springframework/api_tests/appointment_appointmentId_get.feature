# ********RoostGPT********

# Test generated by RoostGPT for test amanJiraTesing using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /appointment/{appointmentId}_get for http method type GET 
# RoostTestHash=c9b995a56b
# 
# 

# ********RoostGPT********
Feature: Retrieve Appointment

  Background:
    * def authToken = karate.properties['AUTH_TOKEN']
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario Outline: Retrieving appointment with valid appointmentId
    Given path 'appointment', <appointmentId>
    And header Authorization = authToken
    When method get
    Then status 200
    And match response.control == {type: '#string', code: '#string', message: '#string'}
    And match response.appointments == {id: '#string', lifeCycleStatus: '#string', occurrences: '#[] occurrences'}
    And def occurrences = {creationDateTime: '#string', startDate: '#string', finishDate: '#string', employeeID: '#string', reason: '#string', reasonDetail: '#string', comments: '#string'}
    And match each response.appointments.occurrences == occurrences

    Examples:
      | read('appointment_appointmentId_get.csv') |

  Scenario Outline: Retrieving appointment with invalid appointmentId
    Given path 'appointment', <appointmentId>
    And header Authorization = authToken
    When method get
    Then status <status>
    And match response.control == {type: '#string', code: '#string', message: '#string'}

    Examples:
      | read('appointment_appointmentId_get.csv') |
